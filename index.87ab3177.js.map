{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAOQ,EAmBA,EACA,EA3BF,EAAgB,SAAS,aAAa,CAAC,MAE7C,SAAS,EAAgB,CAAG,EAC1B,MAAO,CAAC,EAAI,OAAO,CAAC,IAAK,IAAI,UAAU,CAAC,IAAK,GAC/C,CAeA,IAAM,GAVJ,CAFM,EAAY,EAAG,AAYU,EAZL,QAAQ,GAEzB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAlB,EACE,IAAM,EAAU,EAAgB,EAAE,OAAO,CAAC,MAAM,EAGhD,OAAO,AAFS,EAAgB,EAAE,OAAO,CAAC,MAAM,EAE/B,CACnB,GAEO,EAKT,CAAA,EAAc,SAAS,CAAG,GAE1B,EAAgB,OAAO,CAAC,SAAC,CAAzB,EAAsC,OAAA,EAAc,MAAM,CAAC,E,GAGnD,EAAY,EAAG,AAeV,EAfe,QAAQ,EAC5B,EAAS,EAAE,CAEjB,EAAS,OAAO,CAAC,SAAC,CAAlB,EACE,EAAO,IAAI,CAAC,CACV,KAAM,EAAG,SAAS,CAClB,SAAU,EAAG,OAAO,CAAC,QAAQ,CAC7B,OAAQ,EAAG,OAAO,CAAC,MAAM,CACzB,IAAK,EAAG,OAAO,CAAC,GAAG,AACrB,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar employeesList = document.querySelector(\"ul\");\nfunction convertToNumber(str) {\n    return +str.replace(\"$\", \"\").replaceAll(\",\", \"\");\n}\nfunction sortList(list) {\n    var elements = _to_consumable_array(list.children);\n    elements.sort(function(a, b) {\n        var salaryA = convertToNumber(a.dataset.salary);\n        var salaryB = convertToNumber(b.dataset.salary);\n        return salaryB - salaryA;\n    });\n    return elements;\n}\nvar sortedEmployees = sortList(employeesList);\nemployeesList.innerHTML = \"\";\nsortedEmployees.forEach(function(employee) {\n    return employeesList.append(employee);\n});\nfunction getEmployees(list) {\n    var elements = _to_consumable_array(list.children);\n    var result = [];\n    elements.forEach(function(el) {\n        result.push({\n            name: el.innerText,\n            position: el.dataset.position,\n            salary: el.dataset.salary,\n            age: el.dataset.age\n        });\n    });\n    return result;\n}\ngetEmployees(employeesList);\n\n//# sourceMappingURL=index.87ab3177.js.map\n","'use strict';\n\nconst employeesList = document.querySelector('ul');\n\nfunction convertToNumber(str) {\n  return +str.replace('$', '').replaceAll(',', '');\n}\n\nfunction sortList(list) {\n  const elements = [...list.children];\n\n  elements.sort((a, b) => {\n    const salaryA = convertToNumber(a.dataset.salary);\n    const salaryB = convertToNumber(b.dataset.salary);\n\n    return salaryB - salaryA;\n  });\n\n  return elements;\n}\n\nconst sortedEmployees = sortList(employeesList);\n\nemployeesList.innerHTML = '';\n\nsortedEmployees.forEach((employee) => employeesList.append(employee));\n\nfunction getEmployees(list) {\n  const elements = [...list.children];\n  const result = [];\n\n  elements.forEach((el) => {\n    result.push({\n      name: el.innerText,\n      position: el.dataset.position,\n      salary: el.dataset.salary,\n      age: el.dataset.age,\n    });\n  });\n\n  return result;\n}\n\ngetEmployees(employeesList);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","elements","result","employeesList","document","querySelector","convertToNumber","str","replace","replaceAll","sortedEmployees","list","children","sort","a","b","salaryA","dataset","salary","salaryB","innerHTML","forEach","employee","append","el","push","innerText","position","age"],"version":3,"file":"index.87ab3177.js.map"}